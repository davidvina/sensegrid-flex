@charset 'UTF-8';

// generates center container with fixed width
// this must be the parent of columns
@mixin float-container($full-width: false) {
  clear: both;
  margin: auto;
  max-width: $container-width;
  
  @if not $full-width {
    max-width: $container-width;
  }
  
  &::after {
    clear: both;
    content: '';
    display: block;
  }
}



// Mixin que controla ancho de las columnas seguns la medida de la ventana del navegador.
// @include col($xl, $l, $m, $, $xs);
// $grid: permite introducir un numero de columans especifica
// $xl:  ancho columnas para $screen-xl
// $l:   ancho para $screen-l
// $m:   para $screen-m
// $s:   para $screen-s
// $xs:  para $screen-xs
//
// ejemplo uso:
// @include col($xl:3, $l:3);
//
// si no se incluye el parametro el valor de ancho sera 100%
@mixin col-float(
  $grid: $grid-default,
  $xl: $grid,
  $l: $grid,
  $m: $grid,
  $s: $grid,
  $xs: $grid,
  $padding: true) {
  //
  $width: percentage($xs / $grid);

  position: relative;

  @if $xs != $grid {
    float: left;
    width: percentage($xs / $grid);
  } @else {
    // configuracio per defecte per dispositius mòvils
    width: $width;
  }

  @if $padding == true {
    padding: $gutter-ver $gutter-hor;
  }

  // només es crea la mediaquery si es diferent de 100% de l'ample
  @if $s != $grid {
    @media only screen and (min-width: $screen-s) {
      float: left;
      width: percentage($s / $grid);
    }
  }

  @if $m != $grid {
    @media only screen and (min-width: $screen-m) {
      float: left;
      width: percentage($m / $grid);
    }
  }

  @if $l != $grid {
    @media only screen and (min-width: $screen-l) {
      float: left;
      width: percentage($l / $grid);
    }
  }

  @if $xl != $grid {
    @media only screen and (min-width: $screen-xl) {
      float: left;
      width: percentage($xl / $grid);
    }
  }
} // end @mixin col()


// @mixin offset controla el margen izquierdo de las columnas
@mixin offset(
  $grid: $grid-default,
  $xl: 0,
  $l: 0,
  $m: 0,
  $s: 0,
  $xs: 0) {
  // només es crea si s'ha passat parametres al mixin
  @if $xs != 0 {
    margin-left: percentage($xs / $grid);
  }

  @if $s != 0 {
    @media only screen and (min-width: $screen-s) {
      margin-left: percentage($s / $grid);
    }
  }

  @if $m != 0 {
    @media only screen and (min-width: $screen-m) {
      margin-left: percentage($m / $grid);
    }
  }

  @if $l != 0 {
    @media only screen and (min-width: $screen-l) {
      margin-left: percentage($l / $grid);
    }
  }

  @if $xl != 0 {
    @media only screen and (min-width: $screen-xl) {
      margin-left: percentage($xl / $grid);
    }
  }
} // end @mixin offset()

// @mixin opull
@mixin pull(
  $grid: $grid-default,
  $xl: 0,
  $l: 0,
  $m: 0,
  $s: 0,
  $xs: 0) {

  // només es crea si s'ha passat parametres al mixin
  @if $xs != 0 {
    right: percentage($xs / $grid);
  }

  @if $s != 0 {
    @media only screen and (min-width: $screen-s) {
      margin-left: percentage($s / $grid);
    }
  }

  @if $m != 0 {
    @media only screen and (min-width: $screen-m) {
      right: percentage($m / $grid);
    }
  }

  @if $l != 0 {
    @media only screen and (min-width: $screen-l) {
      right: percentage($l / $grid);
    }
  }

  @if $xl != 0 {
    @media only screen and (min-width: $screen-xl) {
      right: percentage($xl / $grid);
    }
  }
} // end @mixin pull

//
@mixin push(
  $grid: $grid-default,
  $xl: 0,
  $l: 0,
  $m: 0,
  $s: 0,
  $xs: 0) {

  // només es crea si s'ha passat parametres al mixin
  @if $xs != 0 {
    left: percentage($xs / $grid);
  }

  @if $s != 0 {
    @media only screen and (min-width: $screen-s) {
      left: percentage($s / $grid);
    }
  }

  @if $m != 0 {
    @media only screen and (min-width: $screen-m) {
      left: percentage($m / $grid);
    }
  }

  @if $l != 0 {
    @media only screen and (min-width: $screen-l) {
      left: percentage($l / $grid);
    }
  }

  @if $xl != 0 {
    @media only screen and (min-width: $screen-xl) {
      left: percentage($xl / $grid);
    }
  }
} //end @mixin push
